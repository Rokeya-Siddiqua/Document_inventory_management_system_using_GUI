/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myapp;

import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hp
 */
public class DocumentInventory extends javax.swing.JFrame {

    /**
     * Creates new form DocumentInventory
     */
    public DocumentInventory() {
        initComponents();
        //table_update();
        ShowRecords();
    }

    Connection con1;
    PreparedStatement pst;
 
    String ImgPath = null;
    int pos=0;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SearchTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        IdTxt = new javax.swing.JTextField();
        DateTxt = new javax.swing.JTextField();
        TopicTxt = new javax.swing.JTextField();
        CercernTxt = new javax.swing.JTextField();
        ApprovedTxt = new javax.swing.JTextField();
        AmountTxt = new javax.swing.JTextField();
        QtyTxt = new javax.swing.JTextField();
        RemarksTxt = new javax.swing.JTextField();
        SummaryBtn = new javax.swing.JButton();
        AddBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        AttachmentBtn = new javax.swing.JButton();
        image_j = new javax.swing.JLabel();
        ClearBtn = new javax.swing.JButton();
        FindBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        UpdateBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 25)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(128, 27, 27));
        jLabel1.setText("Document Inventory ");

        jLabel2.setFont(new java.awt.Font("Rockwell", 1, 20)); // NOI18N
        jLabel2.setText("Search by ID");

        SearchTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SearchTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SearchTxtFocusGained(evt);
            }
        });
        SearchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchTxtActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 63, 141));
        jLabel3.setText("New Entry");

        jLabel4.setFont(new java.awt.Font("Swis721 Cn BT", 1, 18)); // NOI18N
        jLabel4.setText("Product ID");

        jLabel5.setFont(new java.awt.Font("Swis721 Cn BT", 1, 18)); // NOI18N
        jLabel5.setText("Date");

        jLabel6.setFont(new java.awt.Font("Swis721 Cn BT", 1, 18)); // NOI18N
        jLabel6.setText("Topic Subject");

        jLabel7.setFont(new java.awt.Font("Swis721 Cn BT", 1, 18)); // NOI18N
        jLabel7.setText("Concern Person");

        jLabel8.setFont(new java.awt.Font("Swis721 Cn BT", 1, 18)); // NOI18N
        jLabel8.setText("Approved By");

        jLabel9.setFont(new java.awt.Font("Swis721 Cn BT", 1, 18)); // NOI18N
        jLabel9.setText("Amount");

        jLabel10.setFont(new java.awt.Font("Swis721 Cn BT", 1, 18)); // NOI18N
        jLabel10.setText("Qty");

        jLabel11.setFont(new java.awt.Font("Swis721 Cn BT", 1, 18)); // NOI18N
        jLabel11.setText("Remarks");

        IdTxt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        DateTxt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        TopicTxt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        CercernTxt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        ApprovedTxt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        AmountTxt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        QtyTxt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        RemarksTxt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        SummaryBtn.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        SummaryBtn.setText("Summary");
        SummaryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SummaryBtnActionPerformed(evt);
            }
        });

        AddBtn.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        AddBtn.setText("Add");
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(163, 234, 234));
        jTable1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Topic Subject", "Date", "Amount", "Qty", "Total", "Approved_By", "Cercern_Person"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 18)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        jLabel12.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(12, 12, 146));
        jLabel12.setText("Product Summary");

        AttachmentBtn.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        AttachmentBtn.setText("Attachment");
        AttachmentBtn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                AttachmentBtnFocusGained(evt);
            }
        });
        AttachmentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttachmentBtnActionPerformed(evt);
            }
        });

        image_j.setBackground(new java.awt.Color(102, 204, 255));
        image_j.setText("imageJlevel");
        image_j.setOpaque(true);

        ClearBtn.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        ClearBtn.setText("Clear");
        ClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBtnActionPerformed(evt);
            }
        });

        FindBtn.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        FindBtn.setText("Find");
        FindBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindBtnActionPerformed(evt);
            }
        });

        DeleteBtn.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        DeleteBtn.setText("Delete");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        UpdateBtn.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        UpdateBtn.setText("Update");
        UpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 412, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(205, 205, 205))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(FindBtn)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 248, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(IdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TopicTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CercernTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ApprovedTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AmountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(QtyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(RemarksTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(0, 10, Short.MAX_VALUE)
                                                .addComponent(ClearBtn)
                                                .addGap(249, 249, 249))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(AttachmentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(SummaryBtn)
                                                        .addGap(72, 72, 72)))))
                                        .addComponent(image_j, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(17, 17, 17))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(AddBtn)
                                        .addGap(57, 57, 57)
                                        .addComponent(DeleteBtn)
                                        .addGap(53, 53, 53)
                                        .addComponent(UpdateBtn))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel9))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FindBtn))
                        .addGap(27, 27, 27)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(IdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(DateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(TopicTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CercernTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(24, 24, 24)
                                .addComponent(jLabel9))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ApprovedTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AmountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(QtyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(RemarksTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddBtn)
                            .addComponent(DeleteBtn)
                            .addComponent(UpdateBtn)
                            .addComponent(ClearBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(image_j, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(SummaryBtn)
                        .addGap(77, 77, 77)
                        .addComponent(AttachmentBtn)))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//display in the jTable-1
    public ArrayList<record> getRecordList()
    {
        ArrayList<record> recordList = new ArrayList<record>();
        try {  
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/superpos","root","");
            String query2 = "SELECT * FROM records" ;
            Statement st;
            ResultSet rs;
            st = con1.createStatement();
            rs = st.executeQuery(query2);
            
            record r;
            while(rs.next())
            {
                r=new record(rs.getInt("id"), rs.getString("topic"), rs.getString("date"), 
                             rs.getString("amount"), rs.getString("qty"), Double.parseDouble(rs.getString("total")),
                             rs.getString("app"), rs.getString("cer"), rs.getBytes("image"));
                recordList.add(r);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DocumentInventory.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DocumentInventory.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return recordList;
    }

//display in the jTable-1
    public void ShowRecords()
    {
         /*ArrayList<record> list = getRecordList();
         DefaultTableModel d = (DefaultTableModel)jTable1.getModel();
         Object[] row = new Object[8];
         for(int i=0; i < list.size() ; i++)
         {
             row[0] = list.get(i).getId();
             row[1] = list.get(i).getTopic();
             row[2] = list.get(i).getDate();
             row[3] = list.get(i).getAmount();
             row[4] = list.get(i).getQty();
             row[5] = list.get(i).getTotal();
             row[6] = list.get(i).getApp();
             row[7] = list.get(i).getCer();
             d.addRow(row);
         }*/
        
        table_update();
    }
    
    public void showItem(int index)
    {
        IdTxt.setText(Integer.toString(getRecordList().get(index).getId()));
        TopicTxt.setText(getRecordList().get(index).getTopic());
        DateTxt.setText(getRecordList().get(index).getDate());
        AmountTxt.setText(getRecordList().get(index).getAmount());
        QtyTxt.setText(getRecordList().get(index).getQty());
        ApprovedTxt.setText(getRecordList().get(index).getApp());
        CercernTxt.setText(getRecordList().get(index).getCer());
        
        image_j.setIcon(ResizeImage(null, getRecordList().get(index).getPicture()));
    }
    
    public void table_update()
    {
    int c;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/superpos","root","");
            //SELECT `id`, `topic`, `date`, `amount`, `qty`, `total`, `app`, `cer` FROM `records` WHERE 1
            pst = con1.prepareStatement("select * from records");
            ResultSet rs = pst.executeQuery();
            
            ResultSetMetaData rsd = rs.getMetaData();
            c = rsd.getColumnCount();
            
            DefaultTableModel d = (DefaultTableModel)jTable1.getModel();
            d.setRowCount(0);
            
            while(rs.next())
            {
                Vector v2 = new Vector();
                
                for(int j=1; j<=c ; j++)
                {
                    v2.add(rs.getString("id"));
                    v2.add(rs.getString("topic"));
                    v2.add(rs.getString("date"));
                    v2.add(rs.getString("amount"));
                    v2.add(rs.getString("qty"));
                    v2.add(rs.getString("total"));
                    v2.add(rs.getString("app"));
                    v2.add(rs.getString("cer"));
                }
                
                d.addRow(v2);
            }       
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DocumentInventory.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DocumentInventory.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
    
    }
     
    /*=====================================resize Image****************************************************/
    public ImageIcon ResizeImage(String imagePath,byte [] pic)
    {
        ImageIcon myImage=null;
        if(imagePath != null)
        {
            myImage = new ImageIcon(imagePath);
        }
        else
        {
            myImage = new ImageIcon(pic);
        }
        Image img = myImage.getImage();
        Image img2 = img.getScaledInstance(image_j.getWidth(), image_j.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(img2);
        return image;
    }
 /***********************************************check if any field is empty*************************************/   
    public boolean checkInputs()
    {
       String i=IdTxt.getText();
       String d=DateTxt.getText();
       String t=TopicTxt.getText();
       String q=QtyTxt.getText();
       String a=AmountTxt.getText();
       String c=CercernTxt.getText();
       String ap=ApprovedTxt.getText(); 
       if(i==null||d==null||t==null||q==null||a==null||c==null||ap==null)
       {
           return false;
       }
       else
       {
           try{
                 double x,y;
                 x=Double.parseDouble(a); //amount
                 y=Double.parseDouble(q);  //qty
                 return true;
           }catch(Exception ex)
           {
               return false;
           }
           
       }
    }
    
    /************************************************************ADD********************************************/
    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed

     if(checkInputs() && ImgPath != null)
     {
       String i=IdTxt.getText();
       String d=DateTxt.getText();
       String t=TopicTxt.getText();
       String q=QtyTxt.getText();
       String a=AmountTxt.getText();
       String c=CercernTxt.getText();
       String ap=ApprovedTxt.getText();        
       double x,y, total;
       //convert string to double
       x=Double.parseDouble(a); //amount
       y=Double.parseDouble(q);  //qty
       total=x*y;
       String query1 = "INSERT INTO `records`(`topic`, `date`, `amount`, `qty`, `total`, `app`, `cer`, `image`) VALUES ( ? ,? ,? , ?, ? , ? , ? , ?)";
//"SELECT * FROM `records` WHERE `id``topic``date``amount``qty``app``cer`=?,?,?,?,?,?,?";//"SELECT * FROM `users` WHERE `username` = ?";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/superpos","root","");
            pst = con1.prepareStatement(query1);                     //check again
            
            pst.setString(1, t);
            pst.setString(2, d);
            pst.setString(3, a);
            pst.setString(4, q);
            pst.setDouble(5, total);
            pst.setString(6, ap);
            pst.setString(7, c);
            
            InputStream img = new FileInputStream(new File(ImgPath));
            pst.setBlob(8, img);
            
            pst.executeUpdate();
            
            
            JOptionPane.showMessageDialog(null, "Record added");
           // table_update();
           ShowRecords();
            
            IdTxt.setText("");
            DateTxt.setText("");
            TopicTxt.setText("");
            QtyTxt.setText("");
            AmountTxt.setText("");
            CercernTxt.setText("");
            ApprovedTxt.setText("");
            RemarksTxt.setText("");
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DocumentInventory.class.getName()).log(Level.SEVERE, null, ex);
        } catch (HeadlessException | FileNotFoundException | SQLException ex) {
            Logger.getLogger(DocumentInventory.class.getName()).log(Level.SEVERE, null, ex);
        }     
     }
     else{
         JOptionPane.showMessageDialog(null, "One or More Filed are empty!!!"+"\n"+"Please fill all the informations."
         +"\n"+"Thanks!!!");
     }
    }//GEN-LAST:event_AddBtnActionPerformed

    private void SearchTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchTxtFocusGained
        
                if(SearchTxt.getText().trim().toLowerCase().equals("product_ID"))        
                {
                     SearchTxt.setText("");
                }
    }//GEN-LAST:event_SearchTxtFocusGained

    private void SearchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchTxtActionPerformed
 
    /**************************************************************Summary Button****************************************/
    private void SummaryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SummaryBtnActionPerformed
        
       String id=IdTxt.getText();
       String da=DateTxt.getText();
       String to=TopicTxt.getText();
       String qt=QtyTxt.getText();
       String am=AmountTxt.getText();
       String ce=CercernTxt.getText();
       String app=ApprovedTxt.getText(); 
        double x,y, total;
       //convert string to double
       x=Double.parseDouble(am); //amount
       y=Double.parseDouble(qt);  //qty
       total=x*y;
 try{
     jTextArea1.setText("Product ID :  "+id+"\n\n"+"Topic Subject :  "+to+"\n\n"+
                "Date :  "+da+"\n\n"+"Amount :  "+am+"\n\n"+"Quantity :  "+qt+"\n\n"+"Total :  "+total+"\n\n"+
                "Approved By :  "+app+"\n\n"+"Concern Person :  "+ce);
     
 } catch(Exception ex)      
 {
     System.out.println(ex);
 }
        
        
    }//GEN-LAST:event_SummaryBtnActionPerformed
/*****************************************************Attachment Button *********************************************/
    private void AttachmentBtnFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AttachmentBtnFocusGained
        // TODO add your handling code here:    
    }//GEN-LAST:event_AttachmentBtnFocusGained

    private void AttachmentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttachmentBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter(" * .images", "jpg", "png");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION)
        {
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            image_j.setIcon(ResizeImage(path, null));
            ImgPath = path;
        }
        else
        {
            System.out.println("No file selected");
        }
        
    }//GEN-LAST:event_AttachmentBtnActionPerformed
/************************************************CLEAR Button*****************************************/
    private void ClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBtnActionPerformed
        
            IdTxt.setText("");
            DateTxt.setText("");
            TopicTxt.setText("");
            QtyTxt.setText("");
            AmountTxt.setText("");
            CercernTxt.setText("");
            ApprovedTxt.setText("");
            RemarksTxt.setText("");
            jTextArea1.setText("");
            SearchTxt.setText("");
            ImgPath=null;
            ImageIcon myImage = new ImageIcon();
    }//GEN-LAST:event_ClearBtnActionPerformed
  
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        int SelectIndex = jTable1.getSelectedRow();
        showItem(SelectIndex);
        /*DefaultTableModel d = (DefaultTableModel)jTable1.getModel();
            int SelectIndex = jTable1.getSelectedRow();
            
            IdTxt.setText(d.getValueAt(SelectIndex, 0).toString());
            TopicTxt.setText(d.getValueAt(SelectIndex, 1).toString());
            DateTxt.setText(d.getValueAt(SelectIndex, 2).toString());
            AmountTxt.setText(d.getValueAt(SelectIndex, 3).toString());
            QtyTxt.setText(d.getValueAt(SelectIndex, 4).toString());
            ApprovedTxt.setText(d.getValueAt(SelectIndex, 6).toString());
            CercernTxt.setText(d.getValueAt(SelectIndex, 7).toString());
            image_j.setIcon(ResizeImage(null, getRecordList().get(index).getPicture()));*/
    }//GEN-LAST:event_jTable1MouseClicked

    
/*****************************************************Find Button***********************************************************/
    private void FindBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindBtnActionPerformed
        
        if(!SearchTxt.getText().equals("") && (Integer.parseInt(SearchTxt.getText()) <= getRecordList().size()))
        {
            int id = Integer.parseInt(SearchTxt.getText());
                showItem(id-1);
          
            /*try {
                int id = Integer.parseInt(SearchTxt.getText());
                Class.forName("com.mysql.jdbc.Driver");
                con1 = DriverManager.getConnection("jdbc:mysql://localhost/superpos","root","");
                pst = con1.prepareStatement("select * from records");
                ResultSet rsd = pst.executeQuery();
                
                 if(rsd.absolute(id)){
                    String i=rsd.getString("id");
                    String t=rsd.getString("topic");
                    String d=rsd.getString("date");
                    String a=rsd.getString("amount");
                    String q=rsd.getString("qty");
                    String to=rsd.getString("total");
                    String ap=rsd.getString("app");
                   String c=rsd.getString("cer");
                   //ImageIcon img = (ImageIcon) rsd.getBlob(id);
                   
            IdTxt.setText(i);
            DateTxt.setText(d);
            TopicTxt.setText(t);
            QtyTxt.setText(q);
            AmountTxt.setText(a);
            CercernTxt.setText(c);
            ApprovedTxt.setText(ap);
            //image_j.setIcon(img);
        }  
     
            } catch (SQLException ex) {
                Logger.getLogger(DocumentInventory.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("tyty");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(DocumentInventory.class.getName()).log(Level.SEVERE, null, ex);
            }*/
       }
        else
        {
            JOptionPane.showMessageDialog(null, "No Id like this."+ "\n"+"please enter valid Id"+ "\n"+"thanks!!!");
        }
           
        
        
    }//GEN-LAST:event_FindBtnActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
      if(!SearchTxt.getText().equals("") && (Integer.parseInt(SearchTxt.getText()) <= getRecordList().size()))
      {
        try {
                pst = con1.prepareStatement("DELETE FROM records WHERE id =? ");
                int id = Integer.parseInt(SearchTxt.getText());
                pst.setInt(1, id);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "product deleted");
                // table_update();
                ShowRecords();
            } catch (SQLException ex) {
                Logger.getLogger(DocumentInventory.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, " product not deleted");
            }
      }
      else
      {
            JOptionPane.showMessageDialog(null, "Product not deleted! " + "\n" +
                                                "No product ID to delete!" + "\n" +
                                                "Enter the product ID again!");
      }

    }//GEN-LAST:event_DeleteBtnActionPerformed
/******************************************* Update ************************************************/
    private void UpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBtnActionPerformed
       String i=IdTxt.getText();
       String d=DateTxt.getText();
       String t=TopicTxt.getText();
       String q=QtyTxt.getText();
       String a=AmountTxt.getText();
       String c=CercernTxt.getText();
       String ap=ApprovedTxt.getText();        
       double x,y, total;
       //convert string to double
       x=Double.parseDouble(a); //amount
       y=Double.parseDouble(q);  //qty
       total=x*y;
        if(checkInputs() && SearchTxt.getText() != null)
        {
            String UpdateQuery =null;
            pst = null;

            //Update without Image
            if(ImgPath == null)
            {
                try
                {
                    UpdateQuery = "UPDATE records SET topic=?,date=?,amount=?,qty=?,total=?,app=?,cer=? WHERE id = ?" ;
                    pst = con1.prepareStatement(UpdateQuery);
                    pst.setString(1, t);
                    pst.setString(2, d);
                    pst.setString(3, a);
                    pst.setString(4, q);
                    pst.setDouble(5, total);
                    pst.setString(6, ap);
                    pst.setString(7, c);
                    pst.setInt(8, Integer.parseInt(i));
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Product Updated");
                    // table_update();
                    ShowRecords();
                    
                }catch(SQLException ex) {
                Logger.getLogger(DocumentInventory.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            // update with image
            else
            {
                try {
                    InputStream img = new FileInputStream(new File(ImgPath));
                    UpdateQuery = "UPDATE records SET topic=?,date=?,amount=?,qty=?,total=?,app=?,cer=?,image=? WHERE id = ?" ;
                    pst = con1.prepareStatement(UpdateQuery);
                    pst.setString(1, t);
                    pst.setString(2, d);
                    pst.setString(3, a);
                    pst.setString(4, q);
                    pst.setDouble(5, total);
                    pst.setString(6, ap);
                    pst.setString(7, c);
                    pst.setBlob(8, img);
                    pst.setInt(9, Integer.parseInt(i));
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Product Updated");
                    // table_update();
                    ShowRecords();
                    
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(DocumentInventory.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(DocumentInventory.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "One or more fields are Empty!"+ "\n"+"OR"+"\n"+"Something Wrong!"+"\n"+"Please try again.");
        }   
    }//GEN-LAST:event_UpdateBtnActionPerformed

    
    //***************************delete work half done********************************************************/
     
            /*try {
                pst = con1.prepareStatement("DELETE FROM records WHERE id =? ");
                int id = Integer.parseInt(SearchTxt.getText());
                pst.setInt(1, id);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "product deleted");
            } catch (SQLException ex) {
                Logger.getLogger(DocumentInventory.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, " product not deleted");*/
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DocumentInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DocumentInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DocumentInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DocumentInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DocumentInventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JTextField AmountTxt;
    private javax.swing.JTextField ApprovedTxt;
    private javax.swing.JButton AttachmentBtn;
    private javax.swing.JTextField CercernTxt;
    private javax.swing.JButton ClearBtn;
    private javax.swing.JTextField DateTxt;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton FindBtn;
    private javax.swing.JTextField IdTxt;
    private javax.swing.JTextField QtyTxt;
    private javax.swing.JTextField RemarksTxt;
    private javax.swing.JTextField SearchTxt;
    private javax.swing.JButton SummaryBtn;
    private javax.swing.JTextField TopicTxt;
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JLabel image_j;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
